/* tslint:disable */
/* eslint-disable */
/**
 * project-template
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GithubComTDiblikProjectTemplateApiHandlersGithubRedirectResponse,
} from '../models/index';
import {
    GithubComTDiblikProjectTemplateApiHandlersGithubRedirectResponseFromJSON,
    GithubComTDiblikProjectTemplateApiHandlersGithubRedirectResponseToJSON,
} from '../models/index';

/**
 * 
 */
export class ApiV1AuthOauthRedirectApi extends runtime.BaseAPI {

    /**
     */
    async apiV1AuthOauthRedirectGithubGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GithubComTDiblikProjectTemplateApiHandlersGithubRedirectResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-user-token"] = await this.configuration.apiKey("x-user-token"); // x-user-token authentication
        }


        let urlPath = `/api/v1/auth/oauth/redirect/github`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GithubComTDiblikProjectTemplateApiHandlersGithubRedirectResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiV1AuthOauthRedirectGithubGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GithubComTDiblikProjectTemplateApiHandlersGithubRedirectResponse> {
        const response = await this.apiV1AuthOauthRedirectGithubGetRaw(initOverrides);
        return await response.value();
    }

}
