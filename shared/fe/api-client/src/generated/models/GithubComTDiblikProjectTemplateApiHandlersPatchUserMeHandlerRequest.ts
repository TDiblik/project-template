/* tslint:disable */
/* eslint-disable */
/**
 * project-template
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest
 */
export interface GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest {
    /**
     *  omitempty 
     * @type {string}
     * @memberof GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest
     */
    firstName?: string;
    /**
     *  omitempty 
     * @type {string}
     * @memberof GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest
     */
    lastName?: string;
    /**
     *  omitempty 
     * @type {string}
     * @memberof GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest
     */
    preferedLanguage?: GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestPreferedLanguageEnum;
    /**
     *  omitempty 
     * @type {string}
     * @memberof GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest
     */
    preferedTheme?: GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestPreferedThemeEnum;
}


/**
 * @export
 */
export const GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestPreferedLanguageEnum = {
    Cs: 'cs',
    En: 'en'
} as const;
export type GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestPreferedLanguageEnum = typeof GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestPreferedLanguageEnum[keyof typeof GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestPreferedLanguageEnum];

/**
 * @export
 */
export const GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestPreferedThemeEnum = {
    Light: 'light',
    Dark: 'dark'
} as const;
export type GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestPreferedThemeEnum = typeof GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestPreferedThemeEnum[keyof typeof GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestPreferedThemeEnum];


/**
 * Check if a given object implements the GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest interface.
 */
export function instanceOfGithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest(value: object): value is GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest {
    return true;
}

export function GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestFromJSON(json: any): GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest {
    return GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestFromJSONTyped(json, false);
}

export function GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'firstName': json['first_name'] == null ? undefined : json['first_name'],
        'lastName': json['last_name'] == null ? undefined : json['last_name'],
        'preferedLanguage': json['prefered_language'] == null ? undefined : json['prefered_language'],
        'preferedTheme': json['prefered_theme'] == null ? undefined : json['prefered_theme'],
    };
}

export function GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestToJSON(json: any): GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest {
    return GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestToJSONTyped(json, false);
}

export function GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequestToJSONTyped(value?: GithubComTDiblikProjectTemplateApiHandlersPatchUserMeHandlerRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'prefered_language': value['preferedLanguage'],
        'prefered_theme': value['preferedTheme'],
    };
}

