/* tslint:disable */
/* eslint-disable */
/**
 * project-template
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponse,
  GithubComTDiblikProjectTemplateApiUtilsErrorResponseType,
} from '../models/index';
import {
    GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponseFromJSON,
    GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponseToJSON,
    GithubComTDiblikProjectTemplateApiUtilsErrorResponseTypeFromJSON,
    GithubComTDiblikProjectTemplateApiUtilsErrorResponseTypeToJSON,
} from '../models/index';

export interface ApiV1PublicAuthOauthRedirectFacebookGetRequest {
    redirectBackToAfterOauth?: ApiV1PublicAuthOauthRedirectFacebookGetRedirectBackToAfterOauthEnum;
}

export interface ApiV1PublicAuthOauthRedirectGithubGetRequest {
    redirectBackToAfterOauth?: ApiV1PublicAuthOauthRedirectGithubGetRedirectBackToAfterOauthEnum;
}

export interface ApiV1PublicAuthOauthRedirectGoogleGetRequest {
    redirectBackToAfterOauth?: ApiV1PublicAuthOauthRedirectGoogleGetRedirectBackToAfterOauthEnum;
}

export interface ApiV1PublicAuthOauthRedirectSpotifyGetRequest {
    redirectBackToAfterOauth?: ApiV1PublicAuthOauthRedirectSpotifyGetRedirectBackToAfterOauthEnum;
}

/**
 * 
 */
export class ApiV1PublicAuthOauthRedirectApi extends runtime.BaseAPI {

    /**
     */
    async apiV1PublicAuthOauthRedirectFacebookGetRaw(requestParameters: ApiV1PublicAuthOauthRedirectFacebookGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponse>> {
        const queryParameters: any = {};

        if (requestParameters['redirectBackToAfterOauth'] != null) {
            queryParameters['redirect_back_to_after_oauth'] = requestParameters['redirectBackToAfterOauth'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-user-token"] = await this.configuration.apiKey("x-user-token"); // x-user-token authentication
        }


        let urlPath = `/api/v1/public/auth/oauth/redirect/facebook`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiV1PublicAuthOauthRedirectFacebookGet(requestParameters: ApiV1PublicAuthOauthRedirectFacebookGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponse> {
        const response = await this.apiV1PublicAuthOauthRedirectFacebookGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiV1PublicAuthOauthRedirectGithubGetRaw(requestParameters: ApiV1PublicAuthOauthRedirectGithubGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponse>> {
        const queryParameters: any = {};

        if (requestParameters['redirectBackToAfterOauth'] != null) {
            queryParameters['redirect_back_to_after_oauth'] = requestParameters['redirectBackToAfterOauth'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-user-token"] = await this.configuration.apiKey("x-user-token"); // x-user-token authentication
        }


        let urlPath = `/api/v1/public/auth/oauth/redirect/github`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiV1PublicAuthOauthRedirectGithubGet(requestParameters: ApiV1PublicAuthOauthRedirectGithubGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponse> {
        const response = await this.apiV1PublicAuthOauthRedirectGithubGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiV1PublicAuthOauthRedirectGoogleGetRaw(requestParameters: ApiV1PublicAuthOauthRedirectGoogleGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponse>> {
        const queryParameters: any = {};

        if (requestParameters['redirectBackToAfterOauth'] != null) {
            queryParameters['redirect_back_to_after_oauth'] = requestParameters['redirectBackToAfterOauth'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-user-token"] = await this.configuration.apiKey("x-user-token"); // x-user-token authentication
        }


        let urlPath = `/api/v1/public/auth/oauth/redirect/google`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiV1PublicAuthOauthRedirectGoogleGet(requestParameters: ApiV1PublicAuthOauthRedirectGoogleGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponse> {
        const response = await this.apiV1PublicAuthOauthRedirectGoogleGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiV1PublicAuthOauthRedirectSpotifyGetRaw(requestParameters: ApiV1PublicAuthOauthRedirectSpotifyGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponse>> {
        const queryParameters: any = {};

        if (requestParameters['redirectBackToAfterOauth'] != null) {
            queryParameters['redirect_back_to_after_oauth'] = requestParameters['redirectBackToAfterOauth'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-user-token"] = await this.configuration.apiKey("x-user-token"); // x-user-token authentication
        }


        let urlPath = `/api/v1/public/auth/oauth/redirect/spotify`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiV1PublicAuthOauthRedirectSpotifyGet(requestParameters: ApiV1PublicAuthOauthRedirectSpotifyGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GithubComTDiblikProjectTemplateApiHandlersOauthRedirectHandlerResponse> {
        const response = await this.apiV1PublicAuthOauthRedirectSpotifyGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ApiV1PublicAuthOauthRedirectFacebookGetRedirectBackToAfterOauthEnum = {
    Index: 'index',
    Profile: 'profile',
    Settings: 'settings'
} as const;
export type ApiV1PublicAuthOauthRedirectFacebookGetRedirectBackToAfterOauthEnum = typeof ApiV1PublicAuthOauthRedirectFacebookGetRedirectBackToAfterOauthEnum[keyof typeof ApiV1PublicAuthOauthRedirectFacebookGetRedirectBackToAfterOauthEnum];
/**
 * @export
 */
export const ApiV1PublicAuthOauthRedirectGithubGetRedirectBackToAfterOauthEnum = {
    Index: 'index',
    Profile: 'profile',
    Settings: 'settings'
} as const;
export type ApiV1PublicAuthOauthRedirectGithubGetRedirectBackToAfterOauthEnum = typeof ApiV1PublicAuthOauthRedirectGithubGetRedirectBackToAfterOauthEnum[keyof typeof ApiV1PublicAuthOauthRedirectGithubGetRedirectBackToAfterOauthEnum];
/**
 * @export
 */
export const ApiV1PublicAuthOauthRedirectGoogleGetRedirectBackToAfterOauthEnum = {
    Index: 'index',
    Profile: 'profile',
    Settings: 'settings'
} as const;
export type ApiV1PublicAuthOauthRedirectGoogleGetRedirectBackToAfterOauthEnum = typeof ApiV1PublicAuthOauthRedirectGoogleGetRedirectBackToAfterOauthEnum[keyof typeof ApiV1PublicAuthOauthRedirectGoogleGetRedirectBackToAfterOauthEnum];
/**
 * @export
 */
export const ApiV1PublicAuthOauthRedirectSpotifyGetRedirectBackToAfterOauthEnum = {
    Index: 'index',
    Profile: 'profile',
    Settings: 'settings'
} as const;
export type ApiV1PublicAuthOauthRedirectSpotifyGetRedirectBackToAfterOauthEnum = typeof ApiV1PublicAuthOauthRedirectSpotifyGetRedirectBackToAfterOauthEnum[keyof typeof ApiV1PublicAuthOauthRedirectSpotifyGetRedirectBackToAfterOauthEnum];
